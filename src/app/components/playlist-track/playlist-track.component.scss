/* Base styling with dynamic heights */
:host {
  display: block;
  /* No fixed height - let content determine it */

  & ion-item.track {
    --border-width: 0;
    --inner-border-width: 0;
    --border-color: transparent;
    width: 100%;

    --background: var(--ion-item-background);
    --color: var(--ion-text-color);

    --padding-start: 10px;
    --padding-end: 10px;
    --padding-top: 8px;
    --padding-bottom: 8px;

    border-radius: 8px;
    overflow: hidden;
    transition: background-color 0.2s ease, box-shadow 0.2s ease, transform 0.2s ease;
    cursor: pointer;
    /* No fixed height - let content determine it */

    ion-thumbnail {
      --size: 56px;
      --border-radius: 4px;
      margin: 0;
      margin-inline-end: 10px;
      flex-shrink: 0;
    }

    ion-label {
      flex: 1;
      display: flex;
      flex-direction: column;
      justify-content: center;

      h2 {
        font-weight: 500;
        font-size: 0.9rem;
        margin-bottom: 4px;
        line-height: 1.2;
        word-wrap: break-word;
        overflow-wrap: break-word;
      }
      p {
        font-size: 0.75rem;
        opacity: 0.7;
        line-height: 1.1;
      }
    }
  }
}

ion-item-sliding {
  display: flex;
  align-items: stretch;
  /* No fixed height - let content determine it */
  position: relative; /* Important for proper layering */
  overflow: visible; /* Allow swipe animation to show */
}

:host:hover {
  & ion-item-sliding {
    transform: translateX(-2px);
  }

  & ion-item.track {
    --background: var(--ion-toolbar-background);
    --color: var(--ion-color-primary-contrast);
  }
}

:host.selected ion-item.track {
  --background: var(--ion-color-primary);
  --color: var(--ion-color-primary-contrast);
}

ion-item-options {

  & ion-item-option {
    z-index: -1;
    margin-left: -10px;
    padding-left: 10px;
    border-top-right-radius: 10px;
    border-bottom-right-radius: 10px;
  }
}

.playing-overlay svg path {
  stroke-dasharray: 15 45;
  stroke-dashoffset: 0;
  animation: wave 2s linear infinite;
}

@keyframes wave {
  to {
    stroke-dashoffset: -60;
  }
}

.thumbnail-container {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  width: 56px;
  height: 56px;
  flex-shrink: 0;
}

.playing-overlay {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 10;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

.playing-overlay svg {
  display: block;
}

/* ========== SortableJS-Specific States ========== */

.sortable-chosen,
.sortable-ghost {
  border: none !important;
  box-shadow: none !important;
  background: transparent !important;
  margin: 0 !important;
  padding: 0 !important;
  box-sizing: border-box;
  /* No fixed height - preserve dynamic sizing */
}

/* DRAGGED ELEMENT */
:host.sortable-drag {
  opacity: 0.9;
  z-index: 1000;
  transform: scale(1.01);
  border-radius: 8px;
  box-sizing: border-box;
  /* No fixed height - preserve original dimensions */

  background: var(--ion-item-background) !important;
  color: var(--ion-text-color) !important;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);

  ion-item {
    --background: var(--ion-item-background) !important;
    --color: var(--ion-text-color) !important;
    --padding-start: 10px;
    --padding-end: 10px;
    --padding-top: 8px;
    --padding-bottom: 8px;
    display: flex;
    align-items: center;
    box-sizing: border-box;
    /* No fixed height */
  }

  ion-thumbnail, ion-label {
    visibility: visible;
  }
}

:host.sortable-drag.selected {
  background: var(--ion-color-primary) !important;
  color: var(--ion-color-primary-contrast) !important;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);

  ion-item {
    --background: var(--ion-color-primary) !important;
    --color: var(--ion-color-primary-contrast) !important;
  }
}

/* PLACEHOLDER ELEMENT - Key fix for dynamic height */
:host.sortable-ghost {
  background: transparent !important;
  border: none !important;
  border-radius: 8px;
  box-shadow: none !important;
  opacity: 0.5;
  /* No fixed height - let it maintain the original item's dimensions */
  display: flex;
  align-items: stretch; /* Stretch to match content */

  & ion-item-options {
    display: none;
  }

  ion-item-sliding {
    /* Preserve the original layout structure */
    display: flex;
    align-items: stretch;
    width: 100%;
  }

  ion-item {
    --background: transparent !important;
    --color: transparent !important;
    display: flex;
    align-items: center;
    width: 100%;
    /* Keep the original padding to maintain spacing */
    --padding-start: 10px;
    --padding-end: 10px;
    --padding-top: 8px;
    --padding-bottom: 8px;
  }

  /* Key insight: Don't collapse the content, just make it invisible */
  ion-thumbnail {
    visibility: hidden !important;
    opacity: 0 !important;
    /* Maintain original dimensions and spacing */
    width: 56px !important;
    height: 56px !important;
    margin: 0 !important;
    margin-inline-end: 10px !important;
    flex-shrink: 0;
  }

  ion-label {
    visibility: hidden !important;
    opacity: 0 !important;
    flex: 1;
    /* Preserve the original label structure and spacing */
    display: flex !important;
    flex-direction: column !important;
    justify-content: center !important;

    h2, p {
      /* Make text invisible but preserve line height and spacing */
      color: transparent !important;
      /* Don't collapse - let the text maintain its natural height */
    }
  }
}
