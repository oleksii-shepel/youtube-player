ion-label {
  padding: 0;
  margin: 0;
  font-size: 0.9rem !important;

  & .duration {
    color: var(--ion-color-primary-contrast);
  };
}

ion-item-sliding {
  background: var(--ion-color-danger); // Match the swipe option color
  border-radius: 8px;
  overflow: visible; // allow border-radius to show fully

  ion-item {
    border: 0;
    border-top-left-radius: 8px;
    border-bottom-left-radius: 8px;
    background: var(--ion-item-background); // your normal track background
    z-index: 5;
    --padding: 0;

    &::part(native) {
      --padding: 0;
    }
  }

  ion-item-option {
    margin-left: -8px;
    border-radius: 0;
    border-top-right-radius: 8px;
    border-bottom-right-radius: 8px;

    overflow: hidden;

    --background: var(--ion-color-danger);
    color: white;

    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0 4px;
    font-weight: 500;
    font-size: 0.95rem;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);
    transition: background-color 0.2s ease;
    z-index: -1;
  }
}

.playing-overlay svg path {
  stroke-dasharray: 15 45;
  stroke-dashoffset: 0;
  animation: wave 2s linear infinite;
}

@keyframes wave {
  to {
    stroke-dashoffset: -60;
  }
}

.thumbnail-container {
  position: relative; /* Make this the reference point for absolutely positioned children */
  display: flex; /* Helps ensure the image fills the space */
  justify-content: center;
  align-items: center;
  overflow: hidden; /* Important to prevent the pulsing SVG from overflowing if it extends beyond the thumbnail bounds, though with 24px it might not */
}

/* Styles for the overlay containing the SVG */
.playing-overlay {
  position: absolute; /* Position it relative to .thumbnail-container */
  top: 50%; /* Move top edge to vertical center */
  left: 50%; /* Move left edge to horizontal center */
  transform: translate(-50%, -50%); /* Pull it back by half its own width/height to truly center it */
  z-index: 10; /* Ensure it's above the image */
  /* Optional: Add a semi-transparent background if you want a slight dimming effect over the image */
  /* background-color: rgba(0, 0, 0, 0.3); */
  /* If the image fills the thumbnail, you can make the overlay fill it too for more precise centering */
  width: 100%;
  height: 100%;
  display: flex; /* Use flexbox to center the SVG within the overlay itself */
  justify-content: center;
  align-items: center;
}

/* If the SVG needs specific sizing within the overlay, you can target it directly */
.playing-overlay svg {
  /* The width/height attributes on the SVG itself are often enough,
     but you can explicitly set them here if needed */
  /* width: 24px;
  height: 24px; */
  display: block; /* Remove any extra space below the SVG */
}
